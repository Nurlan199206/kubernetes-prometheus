apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
       fsGroup: 472
       runAsUser: 472
       runAsNonRoot: true
      containers:
      - args:
        - GF_SECURITY_ADMIN_PASSWORD=secret
        image: grafana/grafana:6.1.3
        name: grafana
        ports:
          - containerPort: 3000
        volumeMounts:
          - name: grafana-pv-storage   ###### ---->>
            mountPath: /var/lib/grafana/dashboards
          - name: grafana-pv-storage
            mountPath: /grafana/
          - mountPath: /etc/grafana/provisioning/dashboards
            name: grafana-config
            readOnly: true
          - mountPath: /var/lib/grafana/dashboards/dashboard.json
            name: grafana-config
            readOnly: true
            subPath: dashboard.json
      volumes:
        - configMap:
            name: grafana-config
          name: grafana-config
        - name: grafana-pv-storage #### <<----
          persistentVolumeClaim:
           claimName: grafana-pv-claim ## CLAIM
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: default
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'

spec:
  selector:
    app: grafana
  type: NodePort
  ports:
    - port: 8080
      targetPort: 3000
      nodePort: 30003